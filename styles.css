*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}

@media (prefers-reduced-motion: no-preference) {
    html {
        interpolate-size: allow-keywords;
    }
}

html {
    /* Stretching body to full viewport height: manera alternativa (no solo con 100vh) */
    /*las 3 propiedades son necesarias*/
    min-height: 100%;
    display: flex;
    flex-direction: column;
}

body {
    /* flex-grow es parte del stretching */
    flex-grow: 1;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    display: flex;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

input,
button,
textarea,
select {
    font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

p {
    text-wrap: pretty;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}

#root,
#__next {
    isolation: isolate;
}

/*****************************************************************************************/
/*probaré a usar medidas de longitudes con em primero, usando solo vh/vw cuando 
de verdad sea necesario
em está bien porque es relativo a los font-size padres y escala con la página para
aquellos users que quieran cambiar el tamaño de la fuente.
px es una solución más global, es ir a lo seguro
*/
:root {
    --leftSideWidth: 35vw;
    --rightSideWidth: clamp(500px, calc(100vw - var(--leftSideWidth)), 75vw);
}

.leftSideContainer {
    display: flex;
    flex-direction: column;
    background: no-repeat url(./images/halie-west-25xggax4bSA-unsplash.jpg);
    height: auto;
    width: var(--leftSideWidth);
    background-size: cover;
}

.odinLogoContainer {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 25vh;
    flex-wrap: wrap;
    background-color: rgb(0, 0, 0, 0.4);
}

.odinLogo {
    height: auto;
    width: 170px;
}

.odinLogoText {
    color: white;
    font-size: 6rem;
}

.backgroundCreditsContainer {
    color: white;
    text-align: center;
    font-size: 1.1rem;
    margin-top: auto;
}


.backgroundCreditsContainer span {
    text-decoration: underline;
    text-underline-offset: 2px;
}

/* usar calc o clamp en el rightcontainer y left*/
.rightSideContainer {
    display: flex;
    flex-direction: column;
    height: auto;
    width: var(--rightSideWidth);
    background: #f5f5f5;
}

.heroQuoteContainer {
    padding: 5em 1em 0em 2em;
    max-inline-size: 66ch;
    font-size: 1.3rem;
    display: flex;
    flex-direction: column;
    gap: 1em;
}

.createAccountFormContainer {

    padding: 1em 1em 2em 2em;
    background: #ffff;

}

.userInfo {
    display: flex;
    flex-direction: column;
    gap: 2em;
}

section>div {
    display: flex;
    gap: 5em;
}

.userInfo div div {
    display: flex;
    flex-direction: column;
}